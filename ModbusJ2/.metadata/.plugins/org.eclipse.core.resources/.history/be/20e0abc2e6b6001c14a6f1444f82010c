package mavenproject;

import java.net.InetAddress;

import com.ghgande.j2mod.modbus.ModbusException;
import com.ghgande.j2mod.modbus.ModbusIOException;
import com.ghgande.j2mod.modbus.ModbusSlaveException;
import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusRequest;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadInputRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.Register;
import com.ghgande.j2mod.modbus.procimg.SimpleRegister;

public class TestModbus {
	
	private static ModbusResponse executeTransaction(TCPMasterConnection connection,
	         ModbusRequest request) 
	         throws ModbusIOException, ModbusSlaveException, ModbusException {
	   ModbusTCPTransaction transaction = new ModbusTCPTransaction(connection);
//	   System.out.print("Output : "+ transaction.getResponse());
//	   System.out.print("Output : "+ transaction.getRequest());
	   transaction.setRequest(request);
	   transaction.execute();
	   System.out.print("Output : "+ transaction.getResponse());
	   return transaction.getResponse();
	}

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
//		Object local = null;
//		TCPMasterConnection con = null;
//		ModbusTCPTransaction trans = null;
//		final InetAddress address = InetAddress.getByName("113.164.176.132");
//		con = new TCPMasterConnection(address);
//		con.setPort(2253);
//		con.setTimeout(1000);
//		con.connect();
//		ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(40072,10);
//		   ainRes.setUnitID(1);
//		   trans = new ModbusTCPTransaction(con);
////           trans.setRetries(5);
////           trans.setRequest(request);
//           trans.setReconnecting(true);
//           trans.setRequest(ainRes);
//           int k = 0;	
//           do {
//               trans.execute();
//               ModbusResponse res = trans.getResponse();
//               System.out.println("out put: " + ((ReadMultipleRegistersResponse) res).getRegisterValue(k));
//               k++;
//           } while (k < 10);
		
		
		
//		Object local = null;
//		TCPMasterConnection con = null;
//		ModbusTCPTransaction trans = null;
//		final InetAddress address = InetAddress.getByName("192.168.1.27");
//		con = new TCPMasterConnection(address);
//		con.setPort(1502);
//		con.setTimeout(1000);
//		con.connect();
//		ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(0,10);
//		   ainRes.setUnitID(3);
//		   trans = new ModbusTCPTransaction(con);
////           trans.setRetries(5);
////           trans.setRequest(request);
//           trans.setReconnecting(true);
//           trans.setRequest(ainRes);
//           int k = 0;	
//           do {
//               trans.execute();
//               ModbusResponse res = trans.getResponse();
//               System.out.println("out put: " + ((ReadMultipleRegistersResponse) res).getRegisterValue(k));
//               k++;
//           } while (k < 10);
		int addressId = 9162; 
		
		Object local = null;
		TCPMasterConnection con = null;
		ModbusTCPTransaction trans = null;
		final InetAddress address = InetAddress.getByName("14.241.228.79");
		con = new TCPMasterConnection(address);
		con.setPort(5501);
		con.setTimeout(1000);
		con.connect();
		ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,100);
//		ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(0,10);
		ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
		   ainRes.setUnitID(5);
		   trans = new ModbusTCPTransaction(con);
//           trans.setRetries(5);
//           trans.setRequest(request);
           trans.setReconnecting(true);
           trans.setRequest(ainRes);
           aina = (ReadMultipleRegistersResponse) trans.getResponse();
           int k = 0;	
           do {
               trans.execute();
               ModbusResponse res = trans.getResponse();
               System.out.print("addressId ( "+addressId+" ) : " + ((ReadMultipleRegistersResponse) res).getRegisterValue(k));
//               System.out.print("mã hex : " + (aina.getRegisterValue(k)));
               System.out.println();
               k++;
               addressId++;
           } while (k < 100);
		
		
		
	}

}
