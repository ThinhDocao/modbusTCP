!SESSION 2022-04-21 15:05:29.742 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

This is a continuation of log file D:\NewModbus\ModbusJ2\.metadata\.bak_0.log
Created Time: 2022-04-21 15:51:27.566

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:27.566
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:27.568
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:29.129
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor()
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:29.129
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:29.130
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:29.904
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor()
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:29.905
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:29.905
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:31.400
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor()
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:31.401
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:31.401
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:34.123
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor()
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:34.124
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:34.124
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:34.703
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor()
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:34.704
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:34.704
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:36.637
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor()
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:36.637
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:36.638
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:37.567
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor())
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-21 15:51:37.567
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-21 15:51:37.568
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:37.581
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor())
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:37.582
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:37.582
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 15:51:41.907
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 (double)lr.getValueNewByLong() * lr.getFactor())
							
							lr.setValueNewByFloat(lr.getValueNewByFloat()!=null ? lr.getValueNewByFloat():lr.getValueNewByLong() * lr.getFactor());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueNewByFloat();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 15:51:41.907
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 15:51:41.908
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:52:14.464
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:52:14.465
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:55:24.364
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:55:24.366
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:57:30.293
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:57:30.293
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:59:41.232
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 15:59:41.234
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:00:39.874
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:00:39.876
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:01:10.657
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:01:10.662
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:04:52.494
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:04:52.496
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:05:30.340
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:05:30.341
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:09:40.247
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:09:40.249
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:15:46.317
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:15:46.319
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 16:17:26.125
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 
						Double da = long( lr.getValueNewByLong() * lr.getFactor();
						lr.setValueReturn( new BigDecimal(lr.getValueNewByLong() * lr.getFactor()).toString());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueReturn();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-21 16:17:26.125
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-21 16:17:26.126
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 16:17:26.136
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}
						 
						Double da = long( lr.getValueNewByLong() * lr.getFactor();
						lr.setValueReturn( new BigDecimal(lr.getValueNewByLong() * lr.getFactor()).toString());
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueReturn();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 16:17:26.136
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 16:17:26.137
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:17:56.279
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:17:56.281
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:24:50.496
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:24:50.497
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:25:17.958
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:25:17.960
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:25:30.643
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:25:30.644
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:29:46.224
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:29:46.226
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:30:07.225
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:30:07.226
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:30:37.068
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:30:37.071
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:31:00.384
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:31:00.387
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:31:05.550
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:31:05.552
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:35:08.240
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:35:08.243
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:37:15.523
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:37:15.526
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:49:50.925
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:49:50.926
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:50:35.589
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:50:35.590
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:52:07.960
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:52:07.962
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:52:15.502
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:52:15.503
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:54:48.180
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:54:48.182
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:55:58.858
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:55:58.860
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:56:03.260
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 16:56:03.262
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:03:39.862
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:03:39.864
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 17:04:54.492
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}

						Long g = lr.getValueNewByLong();
						if(sizebyte >=4) {
							double gg = (double)lr.getFactor();
							(gg*g)
							lr.setValueReturn(String.valueOf(g*gg));
						}else {
							
							float gg = lr.getFactor();
							lr.setValueReturn(String.valueOf(g*gg));
						}
						
						
						
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueReturn();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-21 17:04:54.492
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-21 17:04:54.492
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 17:04:58.046
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}

						Long g = lr.getValueNewByLong();
						if(sizebyte >=4) {
							double gg = (double)lr.getFactor();
							(gg*g)
							lr.setValueReturn(String.valueOf(g*gg));
						}else {
							
							float gg = lr.getFactor();
							lr.setValueReturn(String.valueOf(g*gg));
						}
						
						
						
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueReturn();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2022-04-21 17:04:58.046
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2022-04-21 17:04:58.046
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:521)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 17:04:58.288
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}

						Long g = lr.getValueNewByLong();
						if(sizebyte >=4) {
							double gg = (double)lr.getFactor();
							(gg*g)
							lr.setValueReturn(String.valueOf(g*gg));
						}else {
							
							float gg = lr.getFactor();
							lr.setValueReturn(String.valueOf(g*gg));
						}
						
						
						
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueReturn();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 17:04:58.288
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 17:04:58.289
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2022-04-21 17:04:59.416
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package mavenproject;

import java.math.BigDecimal;
import java.net.InetAddress;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import com.ghgande.j2mod.modbus.io.ModbusTCPTransaction;
import com.ghgande.j2mod.modbus.msg.ModbusResponse;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersRequest;
import com.ghgande.j2mod.modbus.msg.ReadMultipleRegistersResponse;
import com.ghgande.j2mod.modbus.net.TCPMasterConnection;
import com.ghgande.j2mod.modbus.procimg.InputRegister;

public class RunableThead extends runJob implements Runnable{

	
	private Integer key;
	private Timer timer;
	private int td = 5;
	private LocalDateTime  startDisConnect;
	private boolean disConnectTF = false;
	
	RunableThead(Integer key){
		this.key = key;
		
	}
	
	Statement stmt = null;
	@Override
	public void run() {
		
		td = 5;
		TimerTask timerTask = new TimerTask() {
			
			@Override
			public void run() {
				System.out.println(td + " : " + key);
				try {
				
			    HashMap<Integer, InputRegister> rgOffset = new HashMap<Integer,InputRegister>(); 
				ModbusModel modbusModel = new ModbusModel();
				
				stmt = null;
				try (Connection conn = getConnection()) {
					StringBuffer sqlObject = new StringBuffer();
			        	
					sqlObject.append("	SELECT	");
					sqlObject.append("	    addressip ipAddress ,	");
					sqlObject.append("	    port ,	");
					sqlObject.append("	    unitid unitId	");
					sqlObject.append("	FROM	");
					sqlObject.append("	    modbus_info	");
					sqlObject.append("	WHERE Status = 1	");
					sqlObject.append("	 AND   id = "+key+"	");
			        	
			        	stmt = conn.createStatement();
						ResultSet rs = stmt.executeQuery(sqlObject.toString());	
						
						while (rs.next()) {
							modbusModel = modbusConfigInfi(rs);		
							modbusModel.setKey(key);
			            }
					    
					    stmt.close();
					    if (conn != null) conn.close();
					} catch (Exception e) {
						e.printStackTrace();
					}
				
				List<modbusAddressModel> dd =  map.get(key);
				
				if(dd.size()>0) {
					int startModbus =dd.get(0).getRegisterOffSet();
					int vt = 1;
					List<StartAndCountInfoModel> listST = new ArrayList<>();
					StartAndCountInfoModel st = new StartAndCountInfoModel();
					while(2>1) {
						st.setStart(startModbus);
						int countEnd = (dd.get(dd.size()- vt).getRegisterOffSet() ) ;
						if(countEnd - startModbus < 40) {
							st.setCount(countEnd + (dd.get(dd.size()- vt).getSizeByte() /2) - 1) ;
							listST.add(st);
							if(vt == 1) {
								modbusModel.setStartAndCount(listST);
								break;
							}else {
								st = new StartAndCountInfoModel();
								startModbus = (dd.get(dd.size()- vt + 1).getRegisterOffSet() ) ;
								vt =1; 
							}
						}else {
							vt++;
						}
					}
					
				}
				
				try {
					TCPMasterConnection con = null;
					ModbusTCPTransaction trans = null;
					final InetAddress address = InetAddress.getByName(modbusModel.getIpAddress());
					con = new TCPMasterConnection(address);
					con.setPort(modbusModel.getPort());
//					con.setTimeout(1000);
					con.connect();
					int countAddress =  0;
					for(StartAndCountInfoModel ls : modbusModel.getStartAndCount()) {
						int addressId = ls.getStart();
						int fa = ls.getCount() - addressId + 1 ;
						countAddress = addressId;
						
						ReadMultipleRegistersRequest ainRes = new ReadMultipleRegistersRequest(addressId,fa);
						ReadMultipleRegistersResponse aina = new ReadMultipleRegistersResponse();
						   ainRes.setUnitID(modbusModel.getUnitId());
						   trans = new ModbusTCPTransaction(con);
			
						   trans.setRetries(5);
//				           trans.setReconnecting(true);
				           trans.setRequest(ainRes);
//				           trans.isReconnecting();
				           trans.execute();
				           disConnectTF = false;
				           ModbusResponse res = trans.getResponse();
				           aina = (ReadMultipleRegistersResponse) res;
				           
				           for(int jk = 0;jk < fa; jk++) {
				        	   if(aina.getRegisterValue(jk) == 65535) {
				        		   aina.getRegister(jk).setValue(0);
				        	   }
				        	   rgOffset.put(countAddress, aina.getRegister(jk));
				        	   countAddress ++;
				           }
					}
					con.close();
				}catch (Exception e) {
				disConnectTF = true;
				if(startDisConnect==null) {
					startDisConnect = LocalDateTime.now();
				}
				
					e.printStackTrace();
				}
				if(!disConnectTF) {
					
					if(flag.get(key)== false) {
						flag.put(key, true);
						startDisConnect=null;
						InsertMeterEventLog("reconnect",LocalDateTime.now());
					}
					
					List<InputRegister> putArray = new ArrayList<>();	
					for(modbusAddressModel lr : dd) {
						putArray = new ArrayList<>();	
						int sizebyte = lr.getSizeByte() / 2;
						if(sizebyte == 1) {
							lr.setValueNewByLong(new Long(rgOffset.get(lr.getRegisterOffSet()).getValue()));
						}else {
							for(int v = 0; v<sizebyte;v++) {
								putArray.add(rgOffset.get(lr.getRegisterOffSet() + v));
							}
							
							if(lr.getDataType().contains("Unsigned_int")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}else if(lr.getDataType().contains("Float")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByFloat(toFloatSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByFloat(toFloat(putArray));
								}
								
							}else if(lr.getDataType().contains("SPECICAL")) {
								if(lr.getByteOrder().equalsIgnoreCase("4321")) {
									lr.setValueNewByLong(toIntSwap(putArray));
								}else if(lr.getByteOrder().equalsIgnoreCase("1234")) {
									lr.setValueNewByLong(toInt(putArray));
								}
							}
						}

						Long g = lr.getValueNewByLong();
						if(sizebyte >=4) {
							double gg = (double)lr.getFactor();
							(gg*g)
							lr.setValueReturn(String.valueOf(g*gg));
						}else {
							
							float gg = lr.getFactor();
							lr.setValueReturn(String.valueOf(g*gg));
						}
						
						
						
					}
					modbusList.put(key, rgOffset);
					
					
					String columnInsert = "yyyymmdd,yyyymmddhhmmss,DEVICECONFIG_ID,";
					String valueInsert = "";
					
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now()) +"' ,";  
					valueInsert += "'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now()) +"' ,";  
					valueInsert += key + " ,";
					for(modbusAddressModel lr : dd) {
						columnInsert += lr.getMeterData()  + " ,";
						String val = "0";
//						if(lr.getValueNewByLong()!=null) {
//							val = "" + lr.getValueNewByLong();
//						}else if(lr.getValueNewByFloat() !=null) {
							val = "" + lr.getValueReturn();
//						}
						valueInsert += "'"+ val +"' ," ;
					}
					columnInsert= columnInsert.substring(0,columnInsert.length() - 1);
					valueInsert= valueInsert.substring(0,valueInsert.length() - 1);
					
					stmt = null;
					try (Connection conn = getConnection()) {
						StringBuffer sqlObject = new StringBuffer();
				        	
						sqlObject.append("	insert into modbus_data	(");
						sqlObject.append("	    "+columnInsert+" ");
						sqlObject.append("	    ) 	");
						sqlObject.append("	  values	");
						sqlObject.append("	(	");
						sqlObject.append("	    "+ valueInsert +"	");
						sqlObject.append("	)	");
				        	
				        	stmt = conn.createStatement();
							stmt.executeUpdate(sqlObject.toString());	
							
						    
						    stmt.close();
						    if (conn != null) conn.close();
						} catch (Exception e) {
							e.printStackTrace();
						}
				}
				
				
				
			}catch (Exception e) {
				e.printStackTrace();
			}
				if(td==0 || !disConnectTF) {
					if(td == 0) {
						InsertMeterEventLog("DisConnectMdev",startDisConnect);
					}
					timer.cancel();
				}
					
				timer.cancel();
				td--;
				
			}
		};
		long delay = 60000L;
		timer = new Timer("Timer");
		timer.schedule(timerTask, 0,delay);
		
	}
	
	private void InsertMeterEventLog(String statusConnect,LocalDateTime startConnect) {

		try{
			 String deviceconFig =null;
			 Connection conn = null;
			 StringBuffer sqlObject;
			 if(flag.get(key) == true) {
				 conn = getConnection(); 
				 sqlObject = new StringBuffer();
				 sqlObject.append("	select mdev_id from modbus_data	");
					sqlObject.append("	where deviceconfig_id = "+key+" ");
					sqlObject.append("		And rownum = 1 ");
					stmt = conn.createStatement();
					ResultSet rs = stmt.executeQuery(sqlObject.toString());	
					
					while (rs.next()) {
						deviceconFig = rs.getString("mdev_id");
		            }
				    stmt.close();
				    if (conn != null) conn.close();
				    flag.put(key, false);
			 }
			 
			    if(deviceconFig!=null) {
			    conn = getConnection(); 
				sqlObject = new StringBuffer();
	        	
				sqlObject.append("	insert into meterevent_log( ");
				sqlObject.append("		ACTIVATOR_ID, ");
				sqlObject.append("		METEREVENT_ID, ");
				sqlObject.append("		OPEN_TIME, ");
				sqlObject.append("		ACTIVATOR_TYPE, ");
				sqlObject.append("		MESSAGE, ");
				sqlObject.append("		SUPPLIER_ID, ");
				sqlObject.append("		WRITETIME, ");
				sqlObject.append("		YYYYMMDD, ");
				sqlObject.append("		FLAG_PMS) ");
				sqlObject.append("		values('"+deviceconFig+"', ");
				sqlObject.append("		'"+statusConnect+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(startConnect)+"', ");
				sqlObject.append("		'EnergyMeter', ");
				sqlObject.append("	'dd', ");
				sqlObject.append("		'1', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now())+"', ");
				sqlObject.append("	'"+DateTimeFormatter.ofPattern("yyyyMMdd").format(LocalDateTime.now())+"', ");
				sqlObject.append("		'0') ");
		        	stmt = conn.createStatement();
					stmt.executeUpdate(sqlObject.toString());	
					
				    
				    stmt.close();
				    if (conn != null) conn.close();
			}
			
			} catch (Exception e) {
				e.printStackTrace();
			}
	
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2022-04-21 17:04:59.417
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2022-04-21 17:04:59.417
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2168)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3003)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:429)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2842)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1966)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationFragment(ASTConverter.java:3986)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToVariableDeclarationStatement(ASTConverter.java:4066)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleLocalDeclaration(ASTConverter.java:561)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:749)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:07:20.879
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:07:20.881
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:10:26.751
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:10:26.753
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:12:50.962
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:12:50.963
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:13:09.981
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:13:09.982
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:16:53.144
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:16:53.145
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:09.319
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:09.320
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:13.282
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:13.283
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:19.208
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:19.209
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:28.028
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:28.029
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:44.623
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:17:44.624
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:20.389
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:20.391
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:25.669
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:25.670
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:36.154
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:36.155
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:47.160
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:19:47.162
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:05.148
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:05.150
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:23.074
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:23.076
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:33.804
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:33.805
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:56.040
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:21:56.041
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:10.650
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:10.651
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:27.700
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:27.701
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:33.278
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:33.280
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:41.891
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:22:41.892
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:27.909
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:27.910
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:32.697
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:32.699
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:44.812
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:44.814
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:54.367
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:23:54.369
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:24:57.503
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:24:57.504
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:27:01.010
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:27:01.013
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:28:28.825
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:28:28.826
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:29:14.334
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:29:14.335
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:19.616
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:19.618
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:35.902
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:35.903
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:47.327
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:47.329
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:57.856
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:30:57.857
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:31:09.658
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:31:09.660
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:31:28.757
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:31:28.758
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:39:58.997
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:39:58.999
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:48:14.091
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-21 17:48:14.092
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.lsp4e 4 0 2022-04-21 17:50:01.405
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$13(LanguageServerWrapper.java:425)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$4(LanguageServerWrapper.java:260)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy51.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$13(LanguageServerWrapper.java:423)
	... 7 more
Caused by: java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more
!SESSION 2022-04-22 08:39:46.116 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-22 08:39:51.873
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-22 08:40:17.428
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 08:40:17.428
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59e67a18,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@37289e90,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 08:40:17.428
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@f461c9c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@40477d52,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 08:40:25.401
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 08:40:25.401
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-22 08:40:25.464
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 08:40:29.427
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 08:40:29.438
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:31:47.549
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:31:47.565
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:35:15.886
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:35:15.888
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.core.jobs 4 2 2022-04-22 09:38:43.833
!MESSAGE An internal error occurred during: "Computing additional info".
!STACK 0
java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    org/eclipse/jdt/internal/corext/dom/LinkedNodeFinder.findByNode(Lorg/eclipse/jdt/core/dom/ASTNode;Lorg/eclipse/jdt/core/dom/Name;)[Lorg/eclipse/jdt/core/dom/Name; @11: invokestatic
  Reason:
    Type '[Lorg/eclipse/jdt/core/dom/Name;' (current frame, stack[0]) is not assignable to '[Lorg/eclipse/jdt/core/dom/SimpleName;'
  Current Frame:
    bci: @11
    flags: { }
    locals: { 'org/eclipse/jdt/core/dom/ASTNode', 'org/eclipse/jdt/core/dom/Name', '[Lorg/eclipse/jdt/core/dom/Name;' }
    stack: { '[Lorg/eclipse/jdt/core/dom/Name;' }
  Bytecode:
    0000000: 2a2b b801 044d 2cc6 0008 2cb8 016b b02b
    0000010: b601 06b6 00f6 3e1d 101e 9f00 0f1d 100a
    0000020: 9f00 091d 1012 a000 32bb 00d0 59b7 00d2
    0000030: 3a04 bb01 0959 2b19 04b7 010b 3a05 2a19
    0000040: 05b6 00d8 1904 1904 b600 dcbd 0107 b600
    0000050: dfc0 010e b801 6bb0 04bd 0107 5903 2b53
    0000060: b801 6bb0                              
  Stackmap Table:
    append_frame(@15,Object[#270])
    append_frame(@41,Integer)
    same_frame(@88)

	at org.eclipse.jdt.internal.ui.text.correction.proposals.ChangeMethodSignatureProposal.modifyParameters(ChangeMethodSignatureProposal.java:225)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.ChangeMethodSignatureProposal.getRewrite(ChangeMethodSignatureProposal.java:136)
	at org.eclipse.jdt.ui.text.java.correction.ASTRewriteCorrectionProposal.addEdits(ASTRewriteCorrectionProposal.java:113)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createTextChange(CUCorrectionProposal.java:196)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createChange(CUCorrectionProposal.java:203)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.getChange(ChangeCorrectionProposal.java:341)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getTextChange(CUCorrectionProposal.java:214)
	at org.eclipse.jdt.core.manipulation.CUCorrectionProposalCore.getAdditionalProposalInfo(CUCorrectionProposalCore.java:132)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:138)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.core.jobs 4 2 2022-04-22 09:38:46.331
!MESSAGE An internal error occurred during: "Computing additional info".
!STACK 0
java.lang.VerifyError: Bad type on operand stack
Exception Details:
  Location:
    org/eclipse/jdt/internal/corext/dom/LinkedNodeFinder.findByNode(Lorg/eclipse/jdt/core/dom/ASTNode;Lorg/eclipse/jdt/core/dom/Name;)[Lorg/eclipse/jdt/core/dom/Name; @11: invokestatic
  Reason:
    Type '[Lorg/eclipse/jdt/core/dom/Name;' (current frame, stack[0]) is not assignable to '[Lorg/eclipse/jdt/core/dom/SimpleName;'
  Current Frame:
    bci: @11
    flags: { }
    locals: { 'org/eclipse/jdt/core/dom/ASTNode', 'org/eclipse/jdt/core/dom/Name', '[Lorg/eclipse/jdt/core/dom/Name;' }
    stack: { '[Lorg/eclipse/jdt/core/dom/Name;' }
  Bytecode:
    0000000: 2a2b b801 044d 2cc6 0008 2cb8 016b b02b
    0000010: b601 06b6 00f6 3e1d 101e 9f00 0f1d 100a
    0000020: 9f00 091d 1012 a000 32bb 00d0 59b7 00d2
    0000030: 3a04 bb01 0959 2b19 04b7 010b 3a05 2a19
    0000040: 05b6 00d8 1904 1904 b600 dcbd 0107 b600
    0000050: dfc0 010e b801 6bb0 04bd 0107 5903 2b53
    0000060: b801 6bb0                              
  Stackmap Table:
    append_frame(@15,Object[#270])
    append_frame(@41,Integer)
    same_frame(@88)

	at org.eclipse.jdt.internal.ui.text.correction.proposals.ChangeMethodSignatureProposal.modifyParameters(ChangeMethodSignatureProposal.java:225)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.ChangeMethodSignatureProposal.getRewrite(ChangeMethodSignatureProposal.java:136)
	at org.eclipse.jdt.ui.text.java.correction.ASTRewriteCorrectionProposal.addEdits(ASTRewriteCorrectionProposal.java:113)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createTextChange(CUCorrectionProposal.java:196)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createChange(CUCorrectionProposal.java:203)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.getChange(ChangeCorrectionProposal.java:341)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getTextChange(CUCorrectionProposal.java:214)
	at org.eclipse.jdt.core.manipulation.CUCorrectionProposalCore.getAdditionalProposalInfo(CUCorrectionProposalCore.java:132)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:138)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$Timer$2$1.run(AdditionalInfoController.java:116)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:40:30.315
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:40:30.331
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:42:32.512
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:42:32.514
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:44:26.918
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:44:26.921
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:44:32.440
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:44:32.442
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:45:05.628
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 09:45:05.639
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:04:56.533
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:04:56.538
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:07:06.512
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:07:06.515
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:10:50.853
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:10:50.855
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:11:36.341
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:11:36.343
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:13:41.439
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:13:41.441
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:15:13.074
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:15:13.076
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:19:48.137
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:19:48.139
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:20:38.131
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:20:38.134
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:20:41.944
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:20:41.947
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:21:07.613
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:21:07.615
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:22:16.412
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:22:16.413
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:22:35.249
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:22:35.252
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:24:06.343
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:24:06.344
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:24:58.161
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:24:58.165
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:27:31.742
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:27:31.745
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:29:21.555
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:29:21.557
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:29:59.307
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:29:59.309
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:30:05.254
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:30:05.256
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:36:30.234
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:36:30.236
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:37:53.749
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:37:53.751
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:42:01.955
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:42:01.956
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:44:34.262
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:44:34.263
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:48:34.736
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:48:34.737
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:50:58.134
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:50:58.150
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:51:01.583
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 10:51:01.584
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:04:30.397
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:04:30.399
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:07:12.237
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:07:12.239
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:08:47.811
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:08:47.812
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:09:37.338
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:09:37.340
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:10:09.184
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:10:09.185
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:12:47.424
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:12:47.426
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:13:44.821
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:13:44.822
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:15:06.523
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:15:06.526
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:15:15.216
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:15:15.217
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.jdt.debug.ui 4 150 2022-04-22 11:16:16.435
!MESSAGE Internal Error
!STACK 1
org.eclipse.debug.core.DebugException: Invalid stack frame
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingStackFrame(JDIStackFrame.java:1371)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getUnderlyingThisObject(JDIStackFrame.java:1006)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getVariables0(JDIStackFrame.java:369)
	at org.eclipse.jdt.internal.debug.core.model.JDIStackFrame.getVariables(JDIStackFrame.java:307)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.containsVariable(JavaDebugHover.java:620)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.lambda$2(JavaDebugHover.java:639)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.findFirstFrameForVariable(JavaDebugHover.java:604)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:469)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SUBENTRY 1 org.eclipse.jdt.debug 4 100 2022-04-22 11:16:16.437
!MESSAGE Invalid stack frame

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:19:15.692
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:19:15.694
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:24:54.079
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:24:54.080
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:35:23.638
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 11:35:23.640
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:30:17.223
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:30:17.225
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:41:49.593
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:41:49.597
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:42:31.189
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:42:31.192
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:42:43.032
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:42:43.033
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:49:18.728
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 13:49:18.730
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 14:07:00.826
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 14:07:00.833
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2022-04-22 15:34:07.297 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-22 15:34:14.612
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-22 15:34:20.265
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 15:34:20.265
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@f461c9c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@40477d52,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 15:34:20.265
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a1be9f8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59b43e35,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 15:34:36.977
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 15:34:36.979
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-22 15:34:37.053
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 15:34:38.895
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-22 15:34:38.914
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2022-04-22 16:24:01.583 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-22 16:24:09.916
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 16:24:09.916
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@20e25bf7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@9fc125b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 16:24:09.916
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62129f97,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@22db974d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 16:24:14.881
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 16:24:14.899
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-22 16:24:14.932
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-22 17:15:02.615 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-22 17:15:08.038
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 17:15:08.038
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7154a248,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@435a4d2d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-22 17:15:08.038
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@253379ec,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@73c6ebec,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 17:15:12.955
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-22 17:15:12.956
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-22 17:15:13.017
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-25 08:42:52.839 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-25 08:43:23.349
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-25 08:43:23.349
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@9fc125b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62129f97,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-25 08:43:23.349
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@22db974d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@10545d02,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-25 08:43:30.167
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-25 08:43:30.170
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-25 08:43:30.229
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-25 08:54:49.707
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-25 08:54:49.719
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2022-04-27 09:04:53.421 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.core.resources 2 10035 2022-04-27 09:05:00.249
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2022-04-27 09:05:15.746
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-27 09:05:15.746
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2e68bd3d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2fda92e0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-27 09:05:15.746
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@535adf36,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4ea4290f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-27 09:05:22.469
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-27 09:05:22.472
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-27 09:05:22.489
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-27 10:23:17.440
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-27 10:23:17.453
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-27 10:23:45.171
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-27 10:23:45.179
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2022-04-27 13:32:55.167 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-27 13:33:10.449
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-27 13:33:10.449
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@23263586,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4e2ad1f2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-27 13:33:10.449
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2e0de20d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@121f97fb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-27 13:33:18.176
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-27 13:33:18.177
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-27 13:33:18.250
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-27 14:20:22.558
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-27 14:20:22.574
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2022-04-27 15:01:10.500 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-27 15:01:19.666
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-27 15:01:19.666
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@9fc125b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62129f97,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-27 15:01:19.666
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@22db974d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@10545d02,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-27 15:01:29.138
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-27 15:01:29.140
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-27 15:01:29.218
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-04-28 08:30:40.436 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-28 08:31:07.071
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-28 08:31:07.071
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5e445ffe,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74fda9ed,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-28 08:31:07.071
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a9fd482,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7ca2319f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-28 08:31:15.638
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-28 08:31:15.639
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-28 08:31:15.680
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:07:39.435
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:07:39.446
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:07:46.262
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:07:46.268
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:08:28.881
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:08:28.883
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:19:58.132
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:19:58.138
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:29:25.371
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:29:25.374
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:56:20.218
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:56:20.219
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:56:26.447
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 10:56:26.449
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:00:13.075
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:00:13.080
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:00:16.740
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:00:16.742
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:12:58.135
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:12:58.139
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:15:27.072
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 11:15:27.077
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:32:31.551
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:32:31.553
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:35:11.797
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:35:11.799
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:36:51.420
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:36:51.422
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:43:29.854
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:43:29.856
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:43:58.881
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 14:43:58.882
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:03:39.178
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:03:39.180
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:08:32.405
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:08:32.407
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:08:38.790
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:08:38.793
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:10:56.118
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:10:56.120
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:12:03.423
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:12:03.425
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:21:33.415
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!

!ENTRY org.eclipse.m2e.logback.appender 2 0 2022-04-28 15:21:33.417
!MESSAGE Using platform encoding (Cp1252 actually) to copy filtered resources, i.e. build is platform dependent!
!SESSION 2022-04-28 15:26:22.019 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-04-28 15:26:51.454
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-28 15:26:51.454
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@70a3b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@18baee88,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-04-28 15:26:51.454
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59e67a18,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@37289e90,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-28 15:26:58.286
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-04-28 15:26:58.286
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-04-28 15:26:58.395
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2022-05-09 09:21:10.634 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-05-09 09:21:38.159
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-05-09 09:21:38.159
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25291901,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a6d4547,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-05-09 09:21:38.159
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@701996e9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@23263586,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-05-09 09:21:45.516
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-05-09 09:21:45.517
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-05-09 09:21:45.660
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.wildwebdeveloper.xml 4 0 2022-05-09 09:22:12.981
!MESSAGE /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
!STACK 0
java.io.FileNotFoundException: /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
	at org.eclipse.osgi.storage.url.bundleentry.Handler.findBundleEntry(Handler.java:55)
	at org.eclipse.osgi.storage.url.BundleResourceHandler.openConnection(BundleResourceHandler.java:182)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.boot.PlatformURLConnection.connect(PlatformURLConnection.java:115)
	at org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal(PlatformURLConnection.java:240)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:37)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.createURI(XMLCatalogs.java:139)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.lambda$3(XMLCatalogs.java:87)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getWTPExtensionCatalog(XMLCatalogs.java:65)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getAllCatalogs(XMLCatalogs.java:52)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLPreferenceConstants.storePreferencesToLemminxOptions(XMLPreferenceConstants.java:90)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.mergeCustomInitializationOptions(XMLLanguageServer.java:163)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.getInitializationOptions(XMLLanguageServer.java:158)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$8(LanguageServerWrapper.java:353)
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.wildwebdeveloper.xml 4 0 2022-05-09 09:22:12.982
!MESSAGE /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
!STACK 0
java.io.FileNotFoundException: /org/eclipse/persistence/jaxb/eclipselink_oxm_2_5.xsd
	at org.eclipse.osgi.storage.url.bundleentry.Handler.findBundleEntry(Handler.java:55)
	at org.eclipse.osgi.storage.url.BundleResourceHandler.openConnection(BundleResourceHandler.java:182)
	at java.base/java.net.URL.openConnection(URL.java:1094)
	at org.eclipse.core.internal.boot.PlatformURLConnection.connect(PlatformURLConnection.java:115)
	at org.eclipse.core.internal.boot.PlatformURLConnection.getURLAsLocal(PlatformURLConnection.java:240)
	at org.eclipse.core.internal.runtime.PlatformURLConverter.toFileURL(PlatformURLConverter.java:37)
	at org.eclipse.core.runtime.FileLocator.toFileURL(FileLocator.java:263)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.createURI(XMLCatalogs.java:139)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.lambda$3(XMLCatalogs.java:87)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getWTPExtensionCatalog(XMLCatalogs.java:65)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLCatalogs.getAllCatalogs(XMLCatalogs.java:52)
	at org.eclipse.wildwebdeveloper.xml.internal.ui.preferences.XMLPreferenceConstants.storePreferencesToLemminxOptions(XMLPreferenceConstants.java:90)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.mergeCustomInitializationOptions(XMLLanguageServer.java:163)
	at org.eclipse.wildwebdeveloper.xml.internal.XMLLanguageServer.getInitializationOptions(XMLLanguageServer.java:158)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$8(LanguageServerWrapper.java:353)
	at java.base/java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1150)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1773)
	at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1760)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:23.196
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/12.2.1.8/oxygen/repository/dependencies/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:24.165
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-glassfish-tools-1.0.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:24.261
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-oxygen.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:25.353
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-4.7.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:25.814
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-wtp-3.9.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.078
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-jetty-9.4.7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.180
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-dtp-1.14.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.283
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-emf-2.13, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.429
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-gef-4, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.468
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-egit-4.9.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.531
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-mylyn-3.23.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.591
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-mpc-1.6.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.637
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-m2e-1.8.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.675
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-m2e-wtp-1.3.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.716
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-oomph-1.8, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.787
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-userstorage-1.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:26.824
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-orbit-R20170919201930, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.013
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-sapphire-9.1.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.052
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/pydev-2.7.5, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.084
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/jackson-1.9.13, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.107
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/jackson-2.8.7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.137
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/jersey-1.17.1-p002, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.175
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/mimepull-1.9.4, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.209
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-java-service-sdk-17.4.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.240
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-developer-service-sdk-1.7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.274
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-storage-service-sdk-13, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.323
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-messaging-service-sdk-14.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:27.385
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/updates/latest, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:28.964
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/drops/nightly/N20180202-232207, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:31.683
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:31.982
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.11.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:32.130
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.11.0.r201704240320, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:32.219
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.12.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:32.362
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.12.0.r201709030044, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:32.451
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.13.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:32.599
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.13.1.r201712040202, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:32.684
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.13.1.r201712040515, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:32.806
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.14.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:33.050
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.14.2.r201802161450, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:33.135
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.14.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:33.287
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.14.3.r201802240500, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:33.370
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.0.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:33.560
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.0.0.r201908191551, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:33.671
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.1.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:33.984
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.1.0.r202001120626, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.064
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.2.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.206
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.2.0.r202003151902, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.284
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.3.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.433
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.3.0.r202008060316, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.513
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.4.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.656
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.4.0.r202105021533, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.743
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.5.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:34.995
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.5.0.r202201070709, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:43.885
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:47.158
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:48.731
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.metadata.repository 4 1000 2022-05-09 10:01:53.598
!MESSAGE No repository found at http://download.eclipse.org/technology/m2e/releases/.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:01:59.004
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/12.2.1.9/photon/repository/dependencies/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:11.931
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/e4/snapshots/org.eclipse.e4.ui/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:13.524
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:16.679
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/release, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:18.252
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.2.2/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:19.896
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.2.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:21.491
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.2.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:23.064
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/release/1.1.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:24.643
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/milestone, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:26.226
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S911-1.2-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:27.819
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S909-1.2-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:29.403
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S908-1.2-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:30.983
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20210519-025928-1.2.2-M1/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:32.594
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20210406-153234/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:34.190
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20191129-202804-1.2.1-RC2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:35.802
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20191118-183434-1.2.1-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:37.374
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170529-101518-1.1-RC2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:38.943
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170525-115740-1.1-RC2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:40.534
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170523-143239-1.1-RC1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:42.102
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/milestone/S20170516-113326-1.1-M7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:43.690
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/updates/nightly, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:48.421
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20220508-034130/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:53.194
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20220507-034119/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:02:57.915
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20220506-034126/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:01.087
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20220505-034134/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:02.683
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/usssdk/drops/nightly/N20220504-034126/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:10.707
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/webtools/repository/2021-09/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:15.130
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/12.2.1.8/oxygen/repository/dependencies/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:15.257
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-glassfish-tools-1.0.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:15.284
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-oxygen.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:15.719
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-4.7.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:15.851
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-wtp-3.9.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:15.977
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-jetty-9.4.7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.010
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-dtp-1.14.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.064
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-emf-2.13, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.118
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-gef-4, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.144
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-egit-4.9.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.193
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-mylyn-3.23.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.235
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-mpc-1.6.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.256
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-m2e-1.8.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.289
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-m2e-wtp-1.3.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.316
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-oomph-1.8, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.356
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-userstorage-1.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.392
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-orbit-R20170919201930, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.529
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/eclipse-sapphire-9.1.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.557
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/pydev-2.7.5, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.580
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/jackson-1.9.13, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.609
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/jackson-2.8.7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.632
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/jersey-1.17.1-p002, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.656
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/mimepull-1.9.4, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.677
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-java-service-sdk-17.4.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.697
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-developer-service-sdk-1.7, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.717
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-storage-service-sdk-13, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.746
!MESSAGE Using unsafe http transport to retrieve http://download.oracle.com/otn_software/oepe/library/oracle-cloud-messaging-service-sdk-14.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:16.769
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/updates/latest, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:18.324
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/oomph/uss/drops/nightly/N20180202-232207, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:19.878
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.114
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.11.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.241
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.11.0.r201704240320, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.311
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.12.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.437
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.12.0.r201709030044, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.503
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.13.1, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.686
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.13.1.r201712040202, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.757
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.13.1.r201712040515, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:20.826
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.14.2, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.091
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.14.2.r201802161450, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.177
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/6.14.3, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.333
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/6.14.3.r201802240500, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.417
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.0.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.574
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.0.0.r201908191551, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.656
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.1.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.813
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.1.0.r202001120626, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:21.897
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.2.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:22.142
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.2.0.r202003151902, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:22.218
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.3.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:22.356
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.3.0.r202008060316, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:22.430
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.4.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:22.564
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.4.0.r202105021533, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:22.639
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/7.5.0, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:22.771
!MESSAGE Using unsafe http transport to retrieve http://testng.org/testng-p2-update-site/updatesites/7.5.0.r202201070709, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:33.957
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:37.088
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/content.xml.xz, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.equinox.p2.repository 2 0 2022-05-09 10:03:39.153
!MESSAGE Using unsafe http transport to retrieve http://download.eclipse.org/technology/m2e/releases/, see CVE-2021-41033. Consider using https instead.

!ENTRY org.eclipse.lsp4e 4 0 2022-05-09 17:31:20.738
!MESSAGE org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
!STACK 0
java.util.concurrent.ExecutionException: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396)
	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$13(LanguageServerWrapper.java:425)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
Caused by: org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.io.IOException: The pipe is being closed
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$4(LanguageServerWrapper.java:260)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.request(RemoteEndpoint.java:161)
	at org.eclipse.lsp4j.jsonrpc.services.EndpointProxy.invoke(EndpointProxy.java:91)
	at jdk.proxy12/jdk.proxy12.$Proxy51.shutdown(Unknown Source)
	at org.eclipse.lsp4e.LanguageServerWrapper.lambda$13(LanguageServerWrapper.java:423)
	... 7 more
Caused by: java.io.IOException: The pipe is being closed
	at java.base/java.io.FileOutputStream.writeBytes(Native Method)
	at java.base/java.io.FileOutputStream.write(FileOutputStream.java:349)
	at java.base/java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:81)
	at java.base/java.io.BufferedOutputStream.flush(BufferedOutputStream.java:142)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:69)
	... 12 more
!SESSION 2022-05-12 15:33:27.782 -----------------------------------------------
eclipse.buildId=4.23.0.I20220308-0310
java.version=17.0.1
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.jee.product

!ENTRY org.eclipse.jface 2 0 2022-05-12 15:35:52.154
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2022-05-12 15:35:52.155
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7aa5292d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25291901,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2022-05-12 15:35:52.155
!MESSAGE A conflict occurred for ALT+SHIFT+R:
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.rename.element,Rename - Refactoring ,
		Rename the selected element,
		Category(org.eclipse.jdt.ui.category.refactoring,Refactor - Java,Java Refactoring Actions,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@a6d4547,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(ALT+SHIFT+R,
	ParameterizedCommand(Command(org.eclipse.ui.edit.rename,Rename,
		Rename the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@701996e9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.ui.navigator 2 0 2022-05-12 15:36:10.076
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.ui.navigator 2 0 2022-05-12 15:36:10.076
!MESSAGE Can't find Navigator Content Descriptor with id: org.eclipse.jst.servlet.ui.EnhancedJavaRendering

!ENTRY org.eclipse.egit.ui 2 0 2022-05-12 15:36:10.145
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\LENOVO'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.oomph.ui 4 0 2022-05-12 15:36:15.655
!MESSAGE java.lang.ExceptionInInitializerError
!STACK 0
java.lang.ExceptionInInitializerError
	at org.eclipse.oomph.setup.ui.recorder.RecorderManager.<clinit>(RecorderManager.java:121)
	at org.eclipse.oomph.setup.ui.SetupUIPlugin.performStartup(SetupUIPlugin.java:216)
	at org.eclipse.oomph.setup.ui.EarlyStartup.earlyStartup(EarlyStartup.java:23)
	at org.eclipse.oomph.internal.ui.EarlyStart.run(EarlyStart.java:119)
	at org.eclipse.oomph.internal.ui.EarlyStart$1.run(EarlyStart.java:98)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.lang.NullPointerException: Cannot invoke "org.osgi.framework.BundleContext.getServiceReference(java.lang.Class)" because "context" is null
	at org.eclipse.oomph.p2.internal.core.AgentManagerImpl.getCurrentAgent(AgentManagerImpl.java:169)
	at org.eclipse.oomph.p2.core.P2Util.getCurrentProvisioningAgent(P2Util.java:111)
	at org.eclipse.oomph.setup.internal.core.util.SetupCoreUtil.<clinit>(SetupCoreUtil.java:157)
	... 6 more
